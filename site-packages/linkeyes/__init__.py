import datetime
import re
from string import Template

s = Template('<a href="$href">$description</a>')

VIDEOS = ['vimeo', 'youtube', 'qik']

VIDEO_RE = re.compile(r'.*%s.*' % ('|\['.join(VIDEOS)))

def get_today():
    now = datetime.datetime.now()
    today = now.strftime('%Y-%m-%d')
    return today

def get_suffix(day):
    mod_num = day % 10
    if (mod_num == 1 and day != 11) :
        suffix ="st"
    elif (mod_num == 2 and day != 12):
        suffix = "nd"
    elif (mod_num == 3 and day != 13):
        suffix = "rd"
    else:
        suffix = "th"
    return suffix
  
def get_title():
    now = datetime.datetime.now()
    day = int(now.strftime('%d'))
    print day, type(day)
    today = '%d%s %s' % (day, get_suffix(day), now.strftime('%B %Y'))
    return today

def get_link(href, link_string):
    return s.substitute(href=href, description=link_string)

def get_linkeyes(post):
    href = post['href']
    notes = post['extended']
    if notes:
        text = notes
    else:
        text = post['description']

    import re
    link_re = re.compile('.*(__(.*)__).*', re.MULTILINE|re.DOTALL)
    match = link_re.match(text)
    if match:
        groups = match.groups()
        link = get_link(href, groups[1])
        entry = text.replace(groups[0], link)
    else:
        entry = get_link(href, text)
    entry = "<li>%s</li>" % (entry)
    return entry

def postlinks(config):
    blog = config['blog']
    delicious = config['delicious']
    import wordpresslib
    from pydelicious import DeliciousAPI
    wp = wordpresslib.WordPressClient(blog['endpoint'], blog['username'], blog['password'])
    a = DeliciousAPI(delicious['username'], delicious['password'])
    # Either succeeds or raises DeliciousError or subclass:

    posts = a.posts_get(tag=config['tag'], dt=get_today()) #, dt, url, hashes, meta)
    bits = []
    videos = []
    alltags = []
    for post in posts['posts']:
        tags = post['tag'].split()
        for tag in tags:
            if tag not in alltags:
                alltags.append(tag)
        entry = get_linkeyes(post)
        if VIDEO_RE.match(entry):
            print "VIDEO"
            videos.append(entry)
        else:
            bits.append(entry)
    alltags.remove(config['tag'])
    if 'publish_tags' in config:
        for tag in config['publish_tags'].split():
            alltags.append(tag)
        
    if bits:
        blogpost = '<ul class="linkeyes">%s%s</ul>' % (''.join(bits), ''.join(videos))
    
        p = wordpresslib.WordPressPost()
        p.title = '%s %s' % (config['title'], get_title())
        p.description = blogpost
        p.mt_keywords = alltags
        idNewPost = wp.newPost(p, True)
